name: "Comment on Issue"
description: "Post a comment to a GitHub issue (supports cross-repo)."
author: "Your Org"
inputs:
  issue_api_url:
    description: "Issue API URL (e.g. https://api.github.com/repos/ORG/REPO/issues/123)"
    required: false
  body:
    description: "Comment body (Markdown supported)"
    required: true

runs:
  using: "composite"
  steps:
    - name: Comment back on issue
      shell: bash
      run: |
        curl -sS -L -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        "${{ inputs.issue_api_url }}/comments" \
        -d "{\"body\": \"$ {{ inputs.body }}\"}"

    # - id: build
    #   name: Build endpoint
    #   shell: bash
    #   run: |
    #     set -euo pipefail
    #     if [ -n "${{ inputs.issue_api_url }}" ]; then
    #       echo "endpoint=${{ inputs.issue_api_url }}/comments" >> "$GITHUB_OUTPUT"
    #     else
    #       if [ -z "${{ inputs.owner }}" ] || [ -z "${{ inputs.repo }}" ] || [ -z "${{ inputs.issue_number }}" ]; then
    #         echo "Provide issue_api_url OR (owner + repo + issue_number)." >&2
    #         exit 1
    #       fi
    #       echo "endpoint=https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo }}/issues/${{ inputs.issue_number }}/comments" >> "$GITHUB_OUTPUT"
    #     fi
    # - name: Post comment
    #   shell: bash
    #   env:
    #     TOKEN: ${{ inputs.token }}
    #     BODY: ${{ inputs.body }}
    #     URL: ${{ steps.build.outputs.endpoint }}
    #   run: |
    #     set -euo pipefail
    #     # Safely JSON-encode BODY using Python (available on ubuntu-latest)
    #     PY='import json,os; print(json.dumps({"body": os.environ["BODY"]}))'
    #     DATA=$(python -c "$PY")
    #     curl -sS -L -X POST \
    #       -H "Accept: application/vnd.github+json" \
    #       -H "Authorization: Bearer ${TOKEN}" \
    #       -H "X-GitHub-Api-Version: 2022-11-28" \
    #       "$URL" \
    #       -d "$DATA"
